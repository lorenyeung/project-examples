
node {
    parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    
    
    def server = Artifactory.server "${params.server}"
    server.credentialsId = "${params.credentialid}"
    def rtNpm = Artifactory.newNpmBuild()
    def buildInfo = Artifactory.newBuildInfo()
    
    stage ('Clone') {
        echo "Hello ${params.PERSON}"
        git url: 'https://github.com/lorenyeung/project-examples.git'
    }

    stage ('Artifactory configuration') {
        rtNpm.deployer repo: "${params.deployrepo}".toString(), server: server
        rtNpm.resolver repo: "${params.resolverepo}".toString(), server: server
        rtNpm.tool = 'NPM_JENKINS_TOOL' // Tool name from Jenkins configuration   
    }

    stage ('Install npm') {
        sh 'rm -rf /var/lib/jenkins/workspace/npm-xray-pipeline-example-do-not-change/npm-example/node_modules/'
        sh 'npm cache clean --force'
        rtNpm.install buildInfo: buildInfo, path: '/var/lib/jenkins/workspace/npm-xray-pipeline-example-do-not-change/npm-example', args: '--always-auth=true'
    }

    stage ('Publish npm') {
        rtNpm.publish buildInfo: buildInfo, path: 'npm-example'
    }

    stage ('Publish build info') {
        server.publishBuildInfo buildInfo
    }
    stage ('Xray scan') {
        def failbuild1=true
        def scanConfig = [ 'buildName' : buildInfo.name, 'buildNumber' : buildInfo.number, 'failBuild' : failbuild1 ]
        def scanResult = server.xrayScan scanConfig
        echo scanResult as String
    
    }
}
